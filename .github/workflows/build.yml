name: Standard CI

on:
  push:
    branches:
      - main
      - release
  pull_request:
    branches:
      - main
      - release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build with Gradle
        run: ./gradlew build
        env:
          USERNAME: ${{ github.actor }}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Docker dev environment setup
        run: |
          cd src
          mkdir -p main/docker/secrets/jwt
          cp test/resources/public.pem        main/docker/secrets/jwt/
          cp test/resources/private_key.pem   main/docker/secrets/jwt/
          cp main/docker/logback.xml.template main/docker/logback.xml
          mkdir                               main/docker/logs main/docker/file-uploads
          sudo chmod o+w                      main/docker/logs main/docker/file-uploads
          sudo chown -R 9999:root             main/docker/secrets/jwt
          cd ..
          ./gradlew :copyToDockerBuildFolder
          cd build/docker/
          docker-compose up -d
          sleep 10
          # Grep exits with exit code 0 when the API is started and fails with exit code 1 otherwise
          echo "Try to reach the Collector API at http://localhost:8080/api/v3/ ..."
          curl -s http://localhost:8080/api/v3/ | grep -q "Cyface Data Collector" #; echo $?

      - name: Debugging output (if last step failed)
        if: failure()
        run: |
          cd src/main/docker/
          echo "main/docker ..."
          ls -alih
          ls -alih logs
          ls -alih secrets
          cd ../build/docker/
          echo "build/docker ..."
          ls -alih
          echo "build/docker/logs ..."
          ls -alih logs
          echo "build/docker/secrets ..."
          ls -alih secrets
          docker ps
          docker logs collector_api
          cat logs/collector.log
          cat logs/collector-out.log
          curl http://localhost:8080/api/v3/
