/*
 * Copyright 2018 Cyface GmbH
 * 
 * This file is part of the Cyface Data Collector.
 *
 *  The Cyface Data Collector is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  The Cyface Data Collector is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with the Cyface Data Collector.  If not, see <http://www.gnu.org/licenses/>.
 */
/*
 * @author Klemens Muthmann
 * @version 1.0.0
 * @since 2.0.0
 */
plugins {
  id 'java'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '2.0.4'
  id 'checkstyle'
  id 'pmd'
  id 'findbugs'
  id 'jacoco'
}

ext {
  // We need to use the SNAPSHOT version, since testing of multipart form uploads is not supported with older versions.
  vertxVersion = '3.6.0'
  junitVersion = '4.12'
  flapdoodleVersion = '2.1.1'
  micrometerVersion = '1.0.6'
  logbackVersion = '1.2.3'
  commonsLangVersion = '3.8.1'
}

repositories {
	maven {
		url "https://oss.sonatype.org/content/repositories/snapshots/"
	}
  	mavenLocal()
  	jcenter()
  
}

group = 'de.cyface'
version = '2.0.0-SNAPSHOT'

sourceCompatibility = '1.8'
mainClassName = 'de.cyface.collector.Application'

def mainVerticleName = 'de.cyface.collector.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {
  implementation "io.vertx:vertx-core:$vertxVersion"
  implementation "io.vertx:vertx-web:$vertxVersion"
  implementation "io.vertx:vertx-mongo-client:$vertxVersion"
  
  // Authentication
  implementation "io.vertx:vertx-auth-common:$vertxVersion"
  implementation "io.vertx:vertx-auth-mongo:$vertxVersion"
  implementation "io.vertx:vertx-auth-jwt:$vertxVersion"
  
  // Monitoring + Metrics
  implementation "io.vertx:vertx-micrometer-metrics:$vertxVersion"
  implementation "io.micrometer:micrometer-registry-prometheus:$micrometerVersion"
  
  // Logging
  implementation "ch.qos.logback:logback-classic:$logbackVersion"
  implementation "ch.qos.logback:logback-core:$logbackVersion"
  
  // Utility
  implementation "org.apache.commons:commons-lang3:$commonsLangVersion"

  // Test Dependencies
  testImplementation "io.vertx:vertx-unit:$vertxVersion"
  testImplementation "junit:junit:$junitVersion"
  testImplementation "io.vertx:vertx-web-client:$vertxVersion"
  // This is required to run an embedded Mongo instance for integration testing.
  testImplementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo:$flapdoodleVersion"
}


shadowJar {
  classifier = 'fat'
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.6'
}

jacoco {
    toolVersion = "0.8.1"
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/reports/jacocoHtml")
    }
}
